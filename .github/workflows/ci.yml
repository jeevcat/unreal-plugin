name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.12
      with:
        source: 'Source'
        clangFormatVersion: 12

  build:
    runs-on: self-hosted
    container:
      image: cloud.canister.io:5000/jeevcat/ue4-full:4.27.0-linux
      credentials:
         username: jeevcat
         password: ${{ secrets.CANISTER_PASSWORD }}

    steps:
      - uses: actions/checkout@v2
        with:
          repository: jeevcat/dummy-unreal-project
          path: /home/ue4/p
        name: 🛒 Checkout dummy UE4 project

      - uses: actions/checkout@v2
        with:
          path: /home/ue4/p/Plugins
        name: 🛒 Checkout plugin

      - name: 🧪 Run tests
        run: ue4 test UnrealPlugin
        working-directory: /home/ue4/p
      
      - name: 🏭 Generate JUnit report
        shell: python
        working-directory: /home/ue4/p
        run: |
          input = 'Saved/Automation/Reports/index.json'
          output = 'Saved/Automation/Reports/report.xml'

          import json
          from junit_xml import TestSuite, TestCase

          with open(input, encoding='utf-8-sig') as f:
              data = json.load(f)

          cases = []
          for t in data['tests']:
              case = TestCase(
                  name=t['testDisplayName'], classname=t['fullTestPath'], status=t['state'])
              for e in t['entries']:
                  event = e['event']
                  case.add_failure_info(message=event['message'], failure_type=event['type'],
                                          output=e['filename'] + ", line " + str(e['lineNumber']))
              cases.append(case)
          ts = TestSuite(name=data['clientDescriptor'],
                          test_cases=cases, timestamp=data['reportCreatedOn'])
          with open(output, 'w') as f:
              TestSuite.to_file(f, [ts], prettyprint=False)

      - name: ⚗️ Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: /home/ue4/p/Saved/Automation/Reports/report.xml

      - name: 📦 Package plugin
        working-directory: /home/ue4/p/Plugins/UnrealPlugin
        run: ue4 package -NoPCH -NoSharedPCH -DisableUnity

      - uses: actions/upload-artifact@v2
        with:
          name: packaged
          path: /home/ue4/p/Plugins/UnrealPlugin/dist
        name: 📁 Upload artifact
